openapi: 3.0.0

info:
  title: Web Page Analyzer API
  description: >
    Provide an analytical summary for a web page
  version: v0.1.0

servers:
  - url: http://localhost:3000
    description: Mock

paths:
  # -------------------------------------------------
  # API Information
  # -------------------------------------------------
  /:
    get: # Get API information
      tags:
      - information
      summary: Sends information about the API
      description: >
        Provides information about the API like name, version, purpose.
      responses:
        '200':
          description: API Details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        enum:
                        - $ref: '#/info/title'
                      version:
                        type: string
                        enum:
                        - $ref: '#/info/version'
                      purpose:
                        type: string
                        enum:
                        - $ref: '#/info/description'

  # -------------------------------------------------
  # Reports
  # -------------------------------------------------
  /reports:
    get: # Get a report about the url
      tags:
      - reports
      summary: Return a report about the web page that the url points to
      parameters:
      - name: url
        in: query
        description: The URL of the page that needs to be analyzed
        schema:
          type: string
          example: "http://sample.com/"
      - name: cmp
        in: query
        description: Component details that need to be added to the summary
        schema:
          type: string
          example: '["h1","h2","h3","h4","h5","h6","a","login"]'
      responses:
        200:
          description: Report
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          version:
                            type: string
                          title:
                            type: string
                      components:
                        type: array
                        items:
                          type: object
                          properties:
                            component:
                              type: string
                            count:
                              type: integer
                            summary:
                              type: array
                              items:
                                type: object
                example: {
                  data: {
                    meta: {
                      version: "",
                      title: ""
                    },
                    components: [
                      {
                        component: "h1",
                        count: 1
                      },
                      {
                        component: "login",
                        count: 0
                      },
                      {
                        component: "a",
                        count: 10,
                        # optional, use map[string]interface{} in transformer
                        summary: [
                          {
                            url: "http://external.com",
                            external: true,
                            return_code: 200
                          }
                        ]
                      }
                    ]
                  }
                }
        400:
          description: Domain Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'


# -------------------------------------------------
# Components
# -------------------------------------------------
components:
  schemas:
    generic_error:
      type: object
      properties:
        errors:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            trace:
              type: string
          required:
          - code
          - message

    validation_error:
      type: object
      properties:
        errors:
          type: object
          properties:
            field:
              type: array
              items:
                type: string
      required:
      - errors
